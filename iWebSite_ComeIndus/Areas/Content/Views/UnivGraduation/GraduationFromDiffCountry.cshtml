@model List<iWebSite_ComeIndus.Areas.Content.Models.TimeModel>;
@{
    ViewData["Title"] = "ComeIndus - 數據圖表";
}
<script src="https://cdn.amcharts.com/lib/4/core.js"></script>
<script src="https://cdn.amcharts.com/lib/4/charts.js"></script>
<script src="https://cdn.amcharts.com/lib/4/themes/animated.js"></script>
<script src="https://cdn.amcharts.com/lib/4/plugins/sliceGrouper.js"></script>
<head>
    <link rel="stylesheet" href="~/css/unisamestyle.css">
    <style>
        .down {
            position: absolute;
            right: 20px;
            bottom: 10px;
        }

        .source {
            position: absolute;
            right: auto;
            left: auto;
            bottom: 20px;
            letter-spacing: 3px;
        }

        .top {
            position: absolute;
            right: 0px;
            top: 50px;
            color: #3BB0A2;
            font-weight: bold;
        }

        .top-left {
            position: absolute;
            left: 0px;
            top: 50px;
            color: #1D3255;
            font-weight: bold;
        }

        .top-left-dwon {
            position: absolute;
            left: 100px;
            top: 50px;
            color: #1D3255;
            font-weight: bold;
        }
    </style>
</head>

<!-- HTML -->
<header id="tai">
    @if (ViewData["StatusNo"] != null && ViewData["StatusNo"].ToString() == "1")
    {
        <div class="button">
            <a class="button btn btn-link btn-lg top-left" href="/content/MgtDepartment/">科系管理</a>
        </div>
        <div class="button">
            <a class="button btn btn-link btn-lg top-left-dwon" href="/content/MgtGraduation">畢業人數管理</a>
        </div>

    }
    <div class="button">
        <a class="button btn btn-link btn-lg top" href="/Content/UnivGraduation/diffyear">前往同國比較>></a>
    </div>

    <div class="container sty1">
        <div class="title">
            <h2 class="tai">Taiwan</h2>
            <h2 class="sin">Singapore</h2>
            <h2 class="chi">China</h2>
        </div>
        <div class="years">
            <select id="selectYear" class="taiyears" onchange="getData(this)">
                @foreach (var year in Model)
                {
                    <option value="@year.Year">@year.Year 年</option>
                }
            </select>
            <span id="progress" style="color:black"></span>
        </div>
        <div class="box">
            <div class="chartdiv" id="chartdiv1"></div>
            <div class="chartdiv" id="chartdiv2"></div>
            <div class="chartdiv" id="chartdiv3"></div>
        </div>
        @if (ViewData["StatusNo"] != null && ViewData["StatusNo"].ToString() == "1")
        {
            <button class="btn btn-light btn-lg down" onclick="download()">下載</button>
        }
        <a href="https://data.gov.sg/dataset/universities-intake-enrolment-and-graduates-by-course" class="source">資料來源:data.gov.sg</a>
    </div>
</header>

<!-- Chart code -->
<script>
    //下載
    function download() {
        var year = document.getElementById("selectYear").value;
        fetch(`/Content/UnivGraduation/Download?Year=${year}&Country=1,7,8`).then(resp => resp.blob())
            .then(blob => {
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.style.display = 'none';
                a.href = url;
                // the filename you want
                a.download = `UnivGraduation_${year}_Taiwan_Singapore_China.xlsx`;
                document.body.appendChild(a);
                a.click();
                window.URL.revokeObjectURL(url);
                a.remove();
            })
            .catch((e) => console.error(e));
    }
    function getData(selectedObj) {
        $.ajax({
            type: "GET",
            url: "/Content/UnivGraduation/GraduationFromDiffCountry",
            data: { year: selectedObj.value },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: true,
            beforeSend: function () {

            },
            success: function (data) {
                console.log(data);

                taiobj = data["台灣"]
                var deptName = taiobj.deptName
                var gradNum = taiobj.graduationNumber
                var inum = []
                deptName.forEach((v, i) => inum.push({ "deptName": deptName[i], "studentNum": gradNum[i] }));
                inum = inum.sort((a, b) => b.studentNum - a.studentNum);
                drawChart(inum, "chartdiv1")

                sinobj = data["新加坡"]
                var sinDeptName = sinobj.deptName
                var singGadNum = sinobj.graduationNumber
                var inum2 = []
                sinDeptName.forEach((v, i) => inum2.push({ "deptName": sinDeptName[i], "studentNum": singGadNum[i] }));
                inum2 = inum2.sort((a, b) => b.studentNum - a.studentNum);
                drawChart(inum2, "chartdiv2")

                chiobj = data["中國"]
                var chiDeptName = chiobj.deptName
                var chigGadNum = chiobj.graduationNumber
                var inum3 = []
                chiDeptName.forEach((v, i) => inum3.push({ "deptName": chiDeptName[i], "studentNum": chigGadNum[i] }));
                inum3 = inum3.sort((a, b) => b.studentNum - a.studentNum);
                drawChart(inum3, "chartdiv3")

            },
            error: function (e) {
                console.log(e);
            }
        });
    }


    function drawChart(data, name) {  // 4. 這時這裡的data就會是inum
        am4core.ready(function () {
            var chartIndex = am4core.registry.baseSprites.findIndex((v) => v.htmlContainer.id == name);
            if (chartIndex != -1) {
                am4core.registry.baseSprites[chartIndex].data = data;
                am4core.registry.baseSprites[chartIndex].children.values[1].disabled = data.length == 0 ? false : true;
            } else {
                // Themes begin
                am4core.useTheme(am4themes_animated);
                // Themes end

                // Create chart instance
                var chart = am4core.create(name, am4charts.PieChart);

                // Add data
                chart.data = data;

                // Add and configure Series
                var pieSeries = chart.series.push(new am4charts.PieSeries());
                pieSeries.dataFields.value = "studentNum";
                pieSeries.dataFields.category = "deptName";
                pieSeries.slices.template.stroke = am4core.color("#fff");
                pieSeries.slices.template.strokeOpacity = 1;

                pieSeries.labels.template.paddingTop = 0;
                pieSeries.labels.template.paddingBottom = 0;
                pieSeries.labels.template.fontSize = 10;

                var emptylabel = chart.createChild(am4core.Label);
                emptylabel.text = "No Data";
                emptylabel.fontSize = 20;
                emptylabel.align = "center";
                emptylabel.disabled = data.length == 0 ? false : true;

                // plugin
                var grouper = pieSeries.plugins.push(new am4plugins_sliceGrouper.SliceGrouper());
                // grouper.threshold = 5;
                grouper.limit = 7;
                grouper.groupName = "Other";
                grouper.clickBehavior = "zoom";

                // This creates initial animation
                pieSeries.hiddenState.properties.opacity = 1;
                pieSeries.hiddenState.properties.endAngle = -90;
                pieSeries.hiddenState.properties.startAngle = -90;

                chart.hiddenState.properties.radius = am4core.percent(0);
            }
        }); // end am4core.ready()
    }
    getData({ value: document.getElementById("selectYear").value });
</script>